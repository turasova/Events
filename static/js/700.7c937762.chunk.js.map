{"version":3,"file":"static/js/700.7c937762.chunk.js","mappings":"oLACA,MAA4B,mC,6BC6D5B,EA1DyB,WACvB,IAAMA,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,GAIjC,OAFAC,QAAQC,IAAIJ,GAEPK,MAAMC,QAAQN,IA2CjBO,EAAAA,EAAAA,KAAA,OAAAC,SACe,OAAZR,QAAY,IAAZA,OAAY,EAAZA,EAAcS,KAAI,SAACC,EAAaC,GAAK,OACpCC,EAAAA,EAAAA,MAAA,MAAgBC,UAAWC,EAAcN,SAAA,EACvCI,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,CAAI,SAAOE,EAAYK,SACvBH,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,CAAI,UAAQE,EAAYM,WAFjBL,EAGJ,OA/CFJ,EAAAA,EAAAA,KAAA,OAAAC,SAAK,6CAmDhB,C,8EC7DO,IAAMS,EAAe,SAAAC,GAAK,OAAIA,EAAMC,OAAOA,MAAO,EAC5CjB,EAAqB,SAAAgB,GAAK,OAAIA,EAAMC,OAAOnB,YAAa,C","sources":["webpack://react-homework-template/./src/components/Pages/ParticipantsPage/ParticipantPage.module.css?4668","components/Pages/ParticipantsPage/ParticipantsPage.jsx","store/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ParticipantPage_container__xrJmY\"};","import css from './ParticipantPage.module.css';\nimport { useSelector } from 'react-redux';\nimport { selectParticipants } from 'store/selectors';\n\nconst ParticipantsPage = () => {\n  const participants = useSelector(selectParticipants);\n\n  console.log(participants);\n\n  if (!Array.isArray(participants)) {\n    return <div>Error: Participants data is not an array.</div>;\n  }\n\n  // useEffect(() => {\n  //   setParticipants(allParticipants);\n  // }, [allParticipants]);\n\n  // useEffect(() => {\n  //   const storedName = localStorage.getItem('name');\n  //   const storedEmail = localStorage.getItem('email');\n  //   console.log(storedEmail);\n\n  //   console.log(storedName);\n\n  //   const name = JSON.parse(storedName);\n  //   const email = JSON.parse(storedEmail);\n\n  //   if (name && email) {\n  //     setParticipants(prevParticipants => [\n  //       ...prevParticipants,\n  //       { name, email },\n  //     ]);\n  //   }\n  // }, []);\n\n  // const formData = [name, email];\n  // console.log(formData);\n  // // Зберегти name та email у масиві participants\n  // setParticipants.push({ formData });\n  //setParticipants.push({ formEmail });\n\n  // const { name, email } = participants;\n\n  // Оновлення стану за допомогою функції оновлення\n  // const updateParticipants = () => {\n  //   setParticipants(prevParticipants => [...prevParticipants, { name, email }]);\n  // };\n\n  // // Викликаємо функцію оновлення при потрібності\n  // updateParticipants();\n\n  return (\n    <div>\n      {participants?.map((participant, index) => (\n        <ul key={index} className={css.container}>\n          <li>Name: {participant.name}</li>\n          <li>Email: {participant.email}</li>\n        </ul>\n      ))}\n    </div>\n  );\n};\nexport default ParticipantsPage;\n","export const selectEvents = state => state.events.events;\nexport const selectParticipants = state => state.events.participants;\n"],"names":["participants","useSelector","selectParticipants","console","log","Array","isArray","_jsx","children","map","participant","index","_jsxs","className","css","name","email","selectEvents","state","events"],"sourceRoot":""}